name: flutter-client CI

on:
  push:
    branches: [ master ]
    paths:
    - 'flutter-client/**'
  pull_request:
    branches: [ master ]
    paths:
    - 'flutter-client/**'
  workflow_dispatch:

env:
  GOOGLE_SERVICE_JSON: ${{ secrets.FIREBASE_GOOGLE_SERVICE_JSON }}

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: actions/cache@v2
      with:
        path: /opt/hostedtoolcache/flutter
        key: ${{ runner.os }}-flutter
    - uses: subosito/flutter-action@v1
      with:
        channel: beta
    - name: Install dependencies
      run: cd flutter-client && flutter pub get
    - name: Run tests
      run: cd flutter-client && flutter analyze && flutter test && flutter format --dry-run --set-exit-if-changed .

  deploy-doc:
    needs: build
    name: Deploy doc
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: beta
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-firebase-cli
        restore-keys: |
          ${{ runner.os }}-node-firebase-cli
    - name: Install firebase cli
      run: npm install -g firebase-tools
    - run: flutter pub global activate dartdoc
    - name: Build and Deploy
      run: |-
        cd flutter-client
        firebase use ${{ secrets.FIREBASE_APP_PROJECT }} --token=${{ secrets.FIREBASE_TOKEN }}
        flutter pub global run dartdoc && firebase target:apply hosting doc ${{ secrets.FIREBASE_APP_PROJECT }}-doc && firebase deploy --only hosting:doc --project ${{ secrets.FIREBASE_APP_PROJECT }} --token=${{ secrets.FIREBASE_TOKEN }}

        # deploy-android:
        #   needs: build
        #   name: Deploy Android
        #   runs-on: ubuntu-latest
        #   steps:
        #   - uses: actions/checkout@v2
        #   - uses: actions/setup-java@v1
        #     with:
        #       java-version: '12.x'
        #   - uses: subosito/flutter-action@v1
        #     with:
        #       channel: beta
        #   - name: Set up Node
        #     uses: actions/setup-node@v2
        #     with:
        #       node-version: '14'
        #   - uses: actions/cache@v2
        #     with:
        #       path: ~/.npm
        #       key: ${{ runner.os }}-node-firebase-cli
        #       restore-keys: |
        #         ${{ runner.os }}-node-firebase-cli
        #   - name: Install firebase cli
        #     run: npm install -g firebase-tools
        #   - name: Build and Deploy
        #     run: |-
        #       cd flutter-client
        #       echo $GOOGLE_SERVICE_JSON > android/app/google-services.json
        #       flutter build apk && firebase appdistribution:distribute ./build/app/outputs/flutter-apk/app-release.apk --app ${{ secrets.FIREBASE_APP_ID_ANDROID }} --token=${{ secrets.FIREBASE_TOKEN }}
