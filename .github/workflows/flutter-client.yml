name: flutter-client CI

on:
  push:
    branches: [ main ]
    paths:
    - 'flutter-client/**'
  pull_request:
    branches: [ main ]
    paths:
    - 'flutter-client/**'
  workflow_dispatch:

env:
  GOOGLE_SERVICE_JSON: ${{ secrets.FIREBASE_GOOGLE_SERVICE_JSON }}
  FLUTTER_VERSION: 2.11.0
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup-flutter
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm install -g firebase-tools

    - name: Install dependencies
      run: cd flutter-client && flutter pub get

    - name: Check format change
      run: cd flutter-client && flutter format --dry-run --set-exit-if-changed .
    - name: Make firebase_options.dart
      run: |-
        flutter pub global activate flutterfire_cli
        cd flutter-client
        flutterfire configure -p ${{ secrets.FIREBASE_APP_PROJECT }} -i ${{ secrets.IOS_BUNDLE_ID }} -a ${{ secrets.ANDROID_APP_ID }} -m ${{ secrets.IOS_BUNDLE_ID }}
    - name: Run tests
      run: cd flutter-client && flutter analyze && flutter test

  golden-test:
    name: golden test
    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup-flutter
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
    - name: Run golden tests
      run: cd flutter-client && flutter test test_goldens
    - name: Upload goldens if tests fail.
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: goldens
        path: flutter-client/test/pages/failures/

  deploy-web:
    needs: [build, golden-test]
    name: Deploy web
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup-flutter
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm install -g firebase-tools
    - name: Make firebase_options.dart
      run: |-
        flutter pub global activate flutterfire_cli
        cd flutter-client 
        flutterfire configure -p ${{ secrets.FIREBASE_APP_PROJECT }} -i ${{ secrets.IOS_BUNDLE_ID }} -a ${{ secrets.ANDROID_APP_ID }} -m ${{ secrets.IOS_BUNDLE_ID }}
    - name: Build and Deploy
      run: |-
        cd flutter-client
        firebase use ${{ secrets.FIREBASE_APP_PROJECT }}
        flutter build web && firebase target:apply hosting app ${{ secrets.FIREBASE_APP_PROJECT }}
        firebase deploy --only hosting:app --project ${{ secrets.FIREBASE_APP_PROJECT }}

  deploy-doc:
    needs: [build, golden-test]
    name: Deploy doc
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup-flutter
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm install -g firebase-tools
    - run: flutter pub global activate dartdoc
    - name: Build and Deploy
      run: |-
        cd flutter-client
        firebase use ${{ secrets.FIREBASE_APP_PROJECT }}
        flutter pub global run dartdoc && firebase target:apply hosting doc ${{ secrets.FIREBASE_APP_PROJECT }}-doc
        firebase deploy --only hosting:doc --project ${{ secrets.FIREBASE_APP_PROJECT }}

  # deploy-android:
  #   needs: build
  #   name: Deploy Android
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-java@v1
  #     with:
  #       java-version: '12.x'
  #   - uses: subosito/flutter-action@v1
  #     with:
  #       channel: beta
  #   - name: Set up Node
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '14'
  #   - uses: actions/cache@v2
  #     with:
  #       path: ~/.npm
  #       key: ${{ runner.os }}-node-firebase-cli
  #       restore-keys: |
  #         ${{ runner.os }}-node-firebase-cli
  #   - name: Install firebase cli
  #     run: npm install -g firebase-tools
  #   - name: Build and Deploy
  #     run: |-
  #       cd flutter-client
  #       echo $GOOGLE_SERVICE_JSON > android/app/google-services.json
  #       flutter build apk && firebase appdistribution:distribute ./build/app/outputs/flutter-apk/app-release.apk --app ${{ secrets.FIREBASE_APP_ID_ANDROID }} --token=${{ secrets.FIREBASE_TOKEN }}
