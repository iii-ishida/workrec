{
	"info": {
		"_postman_id": "c2595e82-7d6d-40ca-b11b-14e0761cbd81",
		"name": "Mutations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"pm.collectionVariables.set('task_id', response.data.createTask.id);",
							"",
							"pm.test(\"id が空でないこと\", function () {",
							"  pm.expect(response.data.createTask.id).to.not.be.empty;",
							"});",
							"",
							"pm.test(\"title がパラメータで指定した文字列であること\", function () {",
							"    const title = pm.collectionVariables.get('title');",
							"  pm.expect(response.data.createTask.title).to.equal(title);",
							"});",
							"",
							"pm.test(\"state が unstarted であること\", function () {",
							"  pm.expect(response.data.createTask.state).to.equal('unstarted');",
							"});",
							"",
							"pm.test(\"totalWorkingTime が 0 であること\", function () {",
							"  pm.expect(response.data.createTask.totalWorkingTime).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($title: String!) {\n  createTask(title: $title) {\n    id\n    title\n    totalWorkingTime\n    state\n  }\n}",
						"variables": "{\n\t\"title\": \"{{title}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_host}}/graphql",
					"host": [
						"{{api_host}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start work on a Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"state が started であること\", function () {",
							"  pm.expect(response.data.startWorkOnTask.state).to.equal('started');",
							"});",
							"",
							"pm.test(\"totalWorkingTime が 0 であること\", function () {",
							"  pm.expect(response.data.startWorkOnTask.totalWorkingTime).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($task_id: String!) {\n  startWorkOnTask(\n    taskId: $task_id,\n    timestamp: \"2022-03-02 20:00\"\n  ) {\n    id\n    state\n    title\n    totalWorkingTime\n  }\n}",
						"variables": "{\n\t\"task_id\": \"{{task_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_host}}/graphql",
					"host": [
						"{{api_host}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Stop work on a Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"state が paused であること\", function () {",
							"  pm.expect(response.data.stopWorkOnTask.state).to.equal('paused');",
							"});",
							"",
							"pm.test(\"totalWorkingTime が 3600 であること\", function () {",
							"  pm.expect(response.data.stopWorkOnTask.totalWorkingTime).to.equal(3600);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($task_id: String!) {\n  stopWorkOnTask(\n    taskId: $task_id,\n    timestamp: \"2022-03-02 21:00\"\n  ) {\n    id\n    state\n    title\n    totalWorkingTime\n  }\n}",
						"variables": "{\n\t\"task_id\": \"{{task_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_host}}/graphql",
					"host": [
						"{{api_host}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Resume work on a Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"state が resumed であること\", function () {",
							"  pm.expect(response.data.startWorkOnTask.state).to.equal('resumed');",
							"});",
							"",
							"pm.test(\"totalWorkingTime が 3600 であること\", function () {",
							"  pm.expect(response.data.startWorkOnTask.totalWorkingTime).to.equal(3600);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($task_id: String!) {\n  startWorkOnTask(\n    taskId: $task_id,\n    timestamp: \"2022-03-02 22:00\"\n  ) {\n    id\n    state\n    title\n    totalWorkingTime\n  }\n}",
						"variables": "{\n\t\"task_id\": \"{{task_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_host}}/graphql",
					"host": [
						"{{api_host}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "task_id",
			"value": ""
		},
		{
			"key": "title",
			"value": "Some Task",
			"type": "default"
		}
	]
}