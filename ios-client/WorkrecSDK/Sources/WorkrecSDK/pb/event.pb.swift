// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: event.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct Event_EventPb {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var id: String {
    get {return _storage._id}
    set {_uniqueStorage()._id = newValue}
  }

  var prevID: String {
    get {return _storage._prevID}
    set {_uniqueStorage()._prevID = newValue}
  }

  var workID: String {
    get {return _storage._workID}
    set {_uniqueStorage()._workID = newValue}
  }

  var action: Event_EventPb.Action {
    get {return _storage._action}
    set {_uniqueStorage()._action = newValue}
  }

  var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  var time: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._time ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._time = newValue}
  }
  /// Returns true if `time` has been explicitly set.
  var hasTime: Bool {return _storage._time != nil}
  /// Clears the value of `time`. Subsequent reads from it will return its default value.
  mutating func clearTime() {_uniqueStorage()._time = nil}

  var createdAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._createdAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._createdAt = newValue}
  }
  /// Returns true if `createdAt` has been explicitly set.
  var hasCreatedAt: Bool {return _storage._createdAt != nil}
  /// Clears the value of `createdAt`. Subsequent reads from it will return its default value.
  mutating func clearCreatedAt() {_uniqueStorage()._createdAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Action: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unspecified // = 0
    case createWork // = 1
    case updateWork // = 2
    case deleteWork // = 3
    case startWork // = 4
    case pauseWork // = 5
    case resumeWork // = 6
    case finishWork // = 7
    case cancelFinishWork // = 8
    case UNRECOGNIZED(Int)

    init() {
      self = .unspecified
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unspecified
      case 1: self = .createWork
      case 2: self = .updateWork
      case 3: self = .deleteWork
      case 4: self = .startWork
      case 5: self = .pauseWork
      case 6: self = .resumeWork
      case 7: self = .finishWork
      case 8: self = .cancelFinishWork
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unspecified: return 0
      case .createWork: return 1
      case .updateWork: return 2
      case .deleteWork: return 3
      case .startWork: return 4
      case .pauseWork: return 5
      case .resumeWork: return 6
      case .finishWork: return 7
      case .cancelFinishWork: return 8
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=4.2)

extension Event_EventPb.Action: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [Event_EventPb.Action] = [
    .unspecified,
    .createWork,
    .updateWork,
    .deleteWork,
    .startWork,
    .pauseWork,
    .resumeWork,
    .finishWork,
    .cancelFinishWork,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "event"

extension Event_EventPb: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".EventPb"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .standard(proto: "prev_id"),
    3: .standard(proto: "work_id"),
    4: .same(proto: "action"),
    5: .same(proto: "title"),
    6: .same(proto: "time"),
    7: .standard(proto: "created_at"),
  ]

  fileprivate class _StorageClass {
    var _id: String = String()
    var _prevID: String = String()
    var _workID: String = String()
    var _action: Event_EventPb.Action = .unspecified
    var _title: String = String()
    var _time: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _createdAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _prevID = source._prevID
      _workID = source._workID
      _action = source._action
      _title = source._title
      _time = source._time
      _createdAt = source._createdAt
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._id)
        case 2: try decoder.decodeSingularStringField(value: &_storage._prevID)
        case 3: try decoder.decodeSingularStringField(value: &_storage._workID)
        case 4: try decoder.decodeSingularEnumField(value: &_storage._action)
        case 5: try decoder.decodeSingularStringField(value: &_storage._title)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._time)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._createdAt)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._id.isEmpty {
        try visitor.visitSingularStringField(value: _storage._id, fieldNumber: 1)
      }
      if !_storage._prevID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._prevID, fieldNumber: 2)
      }
      if !_storage._workID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._workID, fieldNumber: 3)
      }
      if _storage._action != .unspecified {
        try visitor.visitSingularEnumField(value: _storage._action, fieldNumber: 4)
      }
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 5)
      }
      if let v = _storage._time {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._createdAt {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Event_EventPb, rhs: Event_EventPb) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._id != rhs_storage._id {return false}
        if _storage._prevID != rhs_storage._prevID {return false}
        if _storage._workID != rhs_storage._workID {return false}
        if _storage._action != rhs_storage._action {return false}
        if _storage._title != rhs_storage._title {return false}
        if _storage._time != rhs_storage._time {return false}
        if _storage._createdAt != rhs_storage._createdAt {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Event_EventPb.Action: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "ACTION_UNSPECIFIED"),
    1: .same(proto: "CREATE_WORK"),
    2: .same(proto: "UPDATE_WORK"),
    3: .same(proto: "DELETE_WORK"),
    4: .same(proto: "START_WORK"),
    5: .same(proto: "PAUSE_WORK"),
    6: .same(proto: "RESUME_WORK"),
    7: .same(proto: "FINISH_WORK"),
    8: .same(proto: "CANCEL_FINISH_WORK"),
  ]
}
