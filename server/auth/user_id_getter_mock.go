// Code generated by MockGen. DO NOT EDIT.
// Source: ./auth/user_id_getter.go

// Package auth is a generated GoMock package.
package auth

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserIDGetter is a mock of UserIDGetter interface
type MockUserIDGetter struct {
	ctrl     *gomock.Controller
	recorder *MockUserIDGetterMockRecorder
}

// MockUserIDGetterMockRecorder is the mock recorder for MockUserIDGetter
type MockUserIDGetterMockRecorder struct {
	mock *MockUserIDGetter
}

// NewMockUserIDGetter creates a new mock instance
func NewMockUserIDGetter(ctrl *gomock.Controller) *MockUserIDGetter {
	mock := &MockUserIDGetter{ctrl: ctrl}
	mock.recorder = &MockUserIDGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserIDGetter) EXPECT() *MockUserIDGetterMockRecorder {
	return m.recorder
}

// GetUserID mocks base method
func (m *MockUserIDGetter) GetUserID(idToken string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserID", idToken)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserID indicates an expected call of GetUserID
func (mr *MockUserIDGetterMockRecorder) GetUserID(idToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserID", reflect.TypeOf((*MockUserIDGetter)(nil).GetUserID), idToken)
}
