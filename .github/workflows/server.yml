name: server CI

on:
  push:
    branches: [ main ]
    paths:
    - 'server/**'
  pull_request:
    branches: [ main ]
    paths:
    - 'server/**'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: api-server
  REGION: asia-northeast1
  CLIENT_ORIGIN: ${{ secrets.CLIENT_ORIGIN }}

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    - name: Install dependencies
      run: |
        cd server
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        cd server
        flake8 ./app --count --show-source --statistics
    # - name: Test with pytest
    #   run: |
    #     cd server
    #     pytest ./app
    - name: docker compose up
      run: cd server && docker compose up -d
    - name: e2e test
      run: npm install && sh test.sh


  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v3
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
    - name: Authorize Docker push
      run: gcloud auth configure-docker
    - name: Build and Push Container
      run: |-
        cd server
        docker build --build-arg=CLIENT_ORIGIN=${{ env.CLIENT_ORIGIN }} -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE }} \
          --region ${{ env.REGION }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} \
          --platform "managed" \
          --quiet
