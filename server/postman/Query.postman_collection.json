{
	"info": {
		"_postman_id": "c95be1a4-edd9-4417-bd95-44c90b424a7c",
		"name": "Query",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"pm.collectionVariables.set('id_token', response.idToken);",
							"",
							"pm.test(\"200 OK\", function () {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"email\":\"user2@example.com\",\"password\":\"PASSWORD\",\"returnSecureToken\":true}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9099/identitytoolkit.googleapis.com/v1/accounts:signUp?key=fake-api-key",
					"host": [
						"localhost"
					],
					"port": "9099",
					"path": [
						"identitytoolkit.googleapis.com",
						"v1",
						"accounts:signUp"
					],
					"query": [
						{
							"key": "key",
							"value": "fake-api-key"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let currentCount = +pm.collectionVariables.get('count_temp');",
							"if (!currentCount) {",
							"    const count = pm.collectionVariables.get('count');",
							"    pm.collectionVariables.set('count_temp', count);",
							"} else {",
							"    currentCount = currentCount - 1;",
							"    pm.collectionVariables.set('count_temp', currentCount);",
							"    postman.setNextRequest('Create Tasks');",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{id_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation {\n  createTask(title: \"aaa\") {\n    id\n    title\n    totalWorkingTime\n    state\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{api_host}}/graphql",
					"host": [
						"{{api_host}}"
					],
					"path": [
						"graphql"
					],
					"query": [
						{
							"key": "count",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.collectionVariables.set('cursor', response.data.tasks.pageInfo.endCursor);",
							"",
							"pm.test(\"limit で指定した件数取得できること\", function () {",
							"    const limit = +pm.collectionVariables.get('limit');",
							"    pm.expect(response.data.tasks.edges.length).to.equal(limit);",
							"});",
							"",
							"pm.test(\"endCursor が空でないこと\", function () {",
							"    pm.expect(response.data.tasks.pageInfo.endCursor).to.not.be.empty;",
							"});",
							"",
							"pm.test(\"hasNextPage が true であること\", function () {",
							"    pm.expect(response.data.tasks.pageInfo.hasNextPage).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set('cursor', '');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{id_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($limit: Int!) {\n  tasks(cursor: \"\", limit: $limit) {\n    edges {\n      node {\n        id\n        state\n        title\n        totalWorkingTime\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}",
						"variables": "{\n\t\"limit\": {{limit}}\n}"
					}
				},
				"url": {
					"raw": "{{api_host}}/graphql",
					"host": [
						"{{api_host}}"
					],
					"path": [
						"graphql"
					],
					"query": [
						{
							"key": "count",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Tasks remaims",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"endCursor が空であること\", function () {",
							"    pm.expect(response.data.tasks.pageInfo.endCursor).to.be.empty;",
							"});",
							"",
							"pm.test(\"hasNextPage が false であること\", function () {",
							"    pm.expect(response.data.tasks.pageInfo.hasNextPage).to.be.false;",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{id_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($cursor: String!) {\n  tasks(cursor: $cursor, limit: 1000) {\n    edges {\n      node {\n        id\n        state\n        title\n        totalWorkingTime\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}",
						"variables": "{\n    \"cursor\": \"{{cursor}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_host}}/graphql",
					"host": [
						"{{api_host}}"
					],
					"path": [
						"graphql"
					],
					"query": [
						{
							"key": "count",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "count",
			"value": "10"
		},
		{
			"key": "count_temp",
			"value": "10",
			"type": "default"
		},
		{
			"key": "limit",
			"value": "9",
			"type": "default"
		},
		{
			"key": "cursor",
			"value": ""
		}
	]
}